env:
  GITHUB_TOKEN: ${{ github.token }}
jobs:
  update_milestone:
    name: Update milestone
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            const { execSync } = require('child_process');

            const milestone = context.payload;

            console.log(milestone);

            const getPullRequests = async () => {
              const buffer = await execSync(`gh pr list --json milestone,title --search "is:closed milestone:${milestone.title}"`);

              return JSON.parse(buffer.toString());
            };

            const getTickets = async (pullRequests) => {
              return pullRequests
                .reduce((array, { title }) => {
                  array.push(...title.match(/(AST-[0-9]+)/g));

                  return array;
                }, [])
                .filter((element, index, array) => {
                  return array.indexOf(element) === index;
                })
                .sort();
            };

            const updateMilestone = async (_, tickets) => {
              const url = encodeURI(`https://vizlib.atlassian.net/issues/?jql=key in (${tickets.join(',')})`);

              const description = milestone.description.replace(/\[JIRA tickets\]\(.+\)/g, '').trim();

              await execSync(`gh milestone edit ${milestone.number} --description "${`[JIRA tickets](${url})\n\n${description}`.trim()}"`);
            };

            const run = async () => {
              await execSync('gh extension install valeriobelli/gh-milestone');

              const pullRequests = await getPullRequests();
              const tickets = await getTickets(pullRequests);

              await updateMilestone(pullRequests, tickets);
            };

            run();


      - uses: actions/checkout@v3

      - uses: ./.github/actions/on_milestone

name: On milestone
on: milestone
